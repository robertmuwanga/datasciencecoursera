library(tidyverse)
install.packages('tidyverse')
library(tidyverse)
mpg
ggplot(data = mpg) + geom_point(aes(x = displ, y = hwy))
ggplot(data = mpg, aes(x = displ, y = hwy))
ggplot(data = mpg, aes(x = displ, y = hwy)) + geom_point()
str(mpg)
?mpg
mpg$drv
mpg$drv %>% summarise()
sumamrize(mpg)
summarize(mpg)
table(mpg$drv)
ggplot(mpg) + geom_point(cyl, hwy)
ggplot(mpg) + geom_point(aes(cyl, hwy))
ggplot(mpg) + geom_point(aes(drv, class))
ggplot(data = mpg, aes(x = displ, y = hwy)) + geom_point(color = class)
ggplot(data = mpg, aes(x = displ, y = hwy)) + geom_point(aes(color = class))
ggplot(data = mpg, aes(x = displ, y = hwy)) + geom_point(aes(size = class))
ggplot(data = mpg, aes(x = displ, y = hwy, size = class)) + geom_point()
ggplot(data = mpg, aes(x = displ, y = hwy, alpa = class)) + geom_point()
ggplot(data = mpg, aes(x = displ, y = hwy, alpha = class)) + geom_point()
ggplot(data = mpg, aes(x = displ, y = hwy, shape = class)) + geom_point()
ggplot(data = mpg, aes(x = displ, y = hwy)) + geom_point(color = 'ble')
ggplot(data = mpg, aes(x = displ, y = hwy)) + geom_point(color = 'blue')
head(mpg)
columns
col(mpg)
title(mpg)
?mpg
type
ggplot(data = mpg, aes(x = displ, y = hwy)) + geom_point(color = displ < 5)
ggplot(data = mpg, aes(x = displ, y = hwy)) + geom_point(colour = displ < 5)
ggplot(data = mpg, aes(x = displ, y = hwy, colour = displ < 5)) + geom_point()
ggplot(data = mpg)
+ geom_point(mapping = aes(x = displ, y = hwy))
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy))
ggplot(data = mpg) + geom_point(aes(displ, hw)) + facet_grid( ~ class)
ggplot(data = mpg) + geom_point(aes(displ, hwy)) + facet_grid( ~ class)
ggplot(data = mpg) + geom_point(aes(displ, hwy)) + facet_grid( ~ class, nrow = 2)
ggplot(data = mpg) + geom_point(aes(displ, hwy)) + facet_grid( ~ class, nrow = 2)
ggplot(data = mpg) + geom_point(aes(displ, hwy)) + facet_wrap( ~ class)
ggplot(data = mpg) + geom_point(aes(displ, hwy)) + facet_wrap( ~ class, nrow = 2)
ggplot(data = mpg) + geom_point(aes(displ, hwy)) + facet_wrap( ~ class, nrow = 1)
ggplot(data = mpg) + geom_point(aes(displ, hwy)) + facet_grid(drv ~ class)
glimpse(mpg)
ggplot(data = mpg) + geom_point(aes(displ, hwy)) + facet_wrap( ~ cty)
ggplot(data = mpg) + geom_point(aes(displ, hwy)) + facet_grid(drv ~ cyl)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_grid(drv ~ .)
ggplot(data = mpg, aes(x = displ, y = hwy)) +
geom_point()
ggplot(data = mpg, aes(x = displ, y = hwy)) +
geom_point() +
geom_smooth()
ggplot(data = mpg, aes(x = displ, y = hwy)) +
geom_point() + geom_smooth(linetype = drv)
ggplot(data = mpg, aes(x = displ, y = hwy)) +
geom_point() + geom_smooth(linetype = mpg$drv)
ggplot(data = mpg, aes(x = displ, y = hwy)) +
geom_point() + geom_smooth(aes(linetype = drv))
ggplot(data = mpg) +
geom_smooth(mapping = aes(x = displ, y = hwy))
ggplot(data = mpg) +
geom_smooth(mapping = aes(x = displ, y = hwy, group = drv))
ggplot(data = mpg) +
geom_smooth(mapping = aes(x = displ, y = hwy, color = drv), show.legend = FALSE)
ggplot(data = mpg) +
geom_smooth(mapping = aes(x = displ, y = hwy, color = drv), show.legend = TRUE)
ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) + geom_point(mapping = aes(color= class)) + geom_smooth(data = filter(mpg, class == 'subcompact'), se = FALSE)
ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) + geom_point(mapping = aes(color= class)) + geom_smooth(data = filter(mpg, class == 'subcompact'), se = FALSE)
ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) + geom_point() + geom_smooth(se = FALSE)
ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) + geom_point() + geom_smooth(se = FALSE, show.legend = FALSE)
ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) + geom_point() + geom_smooth(se = FALSE, show.legend = TRUE)
ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) + geom_point(aes(color = drv)) + geom_smooth(se = FALSE, )
ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) + geom_point(aes(color = drv)) + geom_smooth(se = FALSE)
ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) + geom_point(aes(color = drv)) + geom_smooth(aes(group = drv), se = FALSE)
ggplot(data = mpg, mapping = aes(x = displ, y = hwy, color = drv)) + geom_point() + geom_smooth(aes(group = drv), se = FALSE)
diamonds
diamonds %>% cut
diamonds$cut
diamonds$cut %>% unique
ggplot(diamonds, aes(x = cut)) + geom_bar()
nrow(diamonds)
head(diamonds)
?geom_bar
ggplot(diamonds, aes(x = cut)) + geom_bar(stat = 'average')
ggplot(diamonds, aes(x = cut)) + geom_bar(stat = 'mean')
demo <- tribble(~cut , ~ freq, "Fair", 1610, "Good", 4906, "Very Good", 12082, "Premium", 13791, "Idea", 21551)
demo
ggplot(demo) + geom_bar(aes(x = cut, y = freq), stat="identity")
ggplot(diamonds, aes(x = cut)) + geom_bar(y = ..prop.., group = )
ggplot(diamonds, aes(x = cut)) + geom_bar(y = ..prop.., group = 1)
ggplot(diamonds, aes(x = cut)) + geom_bar(aes(y = ..prop.., group = 1))
this_is_a_really_long_name <- 2.5
this_is_a_really_long_name
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy))
filter(diamond, carat > 3)
filter(diamond, carat > 3)
filter(diamonds, carat > 3)
flights_sml <- select(flights, year:day, ends_with('delay'), distance, air_time)
library(nycflights13)
import.packages('nycflights13')
install.packages('nycflights13')
library(nycflights13)
flights
flights_sml <- select(flights, year:day, ends_with('delay'), distance, air_time)
dim(flights_sml)
dim(flights_sml)[1]
mutate(flights_sml, gain = dep_delay - arr_delay, speed = distance / air_time * 60)
mutate(flights_sml, gain = dep_delay - arr_delay, speed = distance / air_time * 60) %>% View()
1:3 + 1:10
sort(1:3 + 1:10)
flights %>% group_by(year, month, day) %>% summarize(delay = mean(na.rm = TRUE))
flights %>% group_by(year, month, day) %>% summarize(delay = mean(., na.rm = TRUE))
flights %>% group_by(year, month, day) %>% summarize(delay = mean(.$dep_delay, na.rm = TRUE))
flights %>% group_by(year, month, day) %>% summarize(delay = mean(flights$dep_delay, na.rm = TRUE))
exit
exit()
quit()
library(tidyverse)
exit()
quit()
library(shiny)
install.packages(shiny)
install.packages('shiny')
setwd("~/Developer/datasciencecoursera/Rprogramming/Week2")
library(tidyverse)
unzip('rprog_data_specdata.zip')
getFiles <- function(directory, id = 1:332) {
data <- lapply(
list.files(directory)[id], function(x) {
read_csv(file.path('specdata', x)) %>%
mutate('filename' = x) }) %>%
bind_rows()
}
pollutantmean <- function(directory, pollutant, id = 1:332) {
data <- getFiles(directory, id)
colMeans(data[, pollutant], na.rm = T)
}
complete <- function(directory, id = 1:332) {
data <- getFiles(directory, id)
unique(data$filename) %>%
lapply(
function(x)
filter(data, filename == x) %>%
summarize('id' = as.integer(str_remove(x, pattern = '.csv')),
'nobs' = complete.cases(.) %>% sum)
) %>% bind_rows
}
corr <- function(directory, threshold) {
}
getFiles
data <- getFiles
data <- getFiles()
?getFiles
getFiles
data <- getFiles('specdata')
data
complete.cases(data)
?complete.cases
data[complete.cases(data), ]
data[complete.cases(data), ] %>% group_by(filename) %>% summarize('corr' = cor(x = sulfate, y = nitrate))
data[complete.cases(data), ] %>% group_by(filename) %>% summarize('corr' = cor(x = sulfate, y = nitrate) %>% filter(corr > 0))
data[complete.cases(data), ] %>% group_by(filename) %>% summarize('corr' = cor(x = sulfate, y = nitrate) %>% filter('corr' > 0))
data[complete.cases(data), ] %>% group_by(filename) %>% summarize('corr' = cor(x = sulfate, y = nitrate)) %>% filter('corr' > 0)
data[complete.cases(data), ] %>% group_by(filename) %>% summarize('corr' = cor(x = sulfate, y = nitrate)) %>% filter(corr > 0)
data[complete.cases(data), ] %>% group_by(filename) %>% summarize('corr' = cor(x = sulfate, y = nitrate)) %>% filter(corr > 0)
complete('specdata', 150)
complete('specdata')
cc <- complete('specdata')
cc %>% filter(nobs > 500)
rm(c(data))
rm(data)
rm(cc)
directory <- 'specdata'
data <- getFiles(directory)
data
complete_cases <- complete(directory)
complete_cases
corr <- function(directory, threshold) {
complete_cases <- complete(directory) %>%
filter(nobs > threshold)
data <- getFiles(directory, complete_cases$id)
data
# data[complete.cases(data), ] %>%
#   group_by(filename) %>%
#   summarize('corr' = cor(x = sulfate, y = nitrate))
}
corr(directory, 500)
rm(c(complete_cases, data))
rm(complete_cases, data)
corr(directory)
corr(directory, 0)
}
}
corr <- function(directory, threshold) {
complete_cases <- complete(directory) %>%
filter(nobs > threshold)
data <- getFiles(directory, complete_cases$id
data[complete.cases(data), ] %>%
group_by(filename) %>%
summarize('corr' = cor(x = sulfate, y = nitrate))
}
corr <- function(directory, threshold) {
complete_cases <- complete(directory) %>%
filter(nobs > threshold)
data <- getFiles(directory, complete_cases$id)
data[complete.cases(data), ] %>%
group_by(filename) %>%
summarize('corr' = cor(x = sulfate, y = nitrate))
}
corr(directory, 0)
corr(directory, 150)
c <- corr(directory, 150)
head(c)
c <- corr(directory, 400)
head(c)
list.dirs(.)
list.dirs()
url <- 'https://d396qusza40orc.cloudfront.net/rprog%2Fdata%2Fspecdata.zip'
download.file(url = url, destfile = 'rprog_data_specdata.zip')
library(tidyverse)
url <- 'https://d396qusza40orc.cloudfront.net/rprog%2Fdata%2Fspecdata.zip'
download.file(url = url, destfile = 'rprog_data_specdata.zip')
unzip('rprog_data_specdata.zip')
getFiles <- function(directory, id = 1:332) {
data <- lapply(
list.files(directory)[id], function(x) {
read_csv(file.path('specdata', x)) %>%
mutate('filename' = x) }) %>%
bind_rows()
}
pollutantmean <- function(directory, pollutant, id = 1:332) {
data <- getFiles(directory, id)
colMeans(data[, pollutant], na.rm = T)
}
complete <- function(directory, id = 1:332) {
data <- getFiles(directory, id)
unique(data$filename) %>%
lapply(
function(x)
filter(data, filename == x) %>%
summarize('id' = as.integer(str_remove(x, pattern = '.csv')),
'nobs' = complete.cases(.) %>% sum)
) %>% bind_rows
}
corr <- function(directory, threshold) {
complete_cases <- complete(directory) %>%
filter(nobs > threshold)
data <- getFiles(directory, complete_cases$id)
data[complete.cases(data), ] %>%
group_by(filename) %>%
summarize('corr' = cor(x = sulfate, y = nitrate))
}
c <- corr(directory, 400)
c
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "sulfate", 34)
pollutantmean("specdata", "nitrate")
cc <- complete("specdata", c(6, 10, 20, 34, 100, 200, 310))
print(cc$nobs)
cc <- complete("specdata", 54)
print(cc$nobs)
RNGversion("3.5.1")
set.seed(42)
cc <- complete("specdata", 332:1)
use <- sample(332, 10)
print(cc[use, "nobs"])
cr <- corr("specdata")
cr <- sort(cr)
RNGversion("3.5.1")
set.seed(868)
out <- round(cr[sample(length(cr), 5)], 4)
print(out)
corr <- function(directory, threshold = 0) {
complete_cases <- complete(directory) %>%
filter(nobs > threshold)
data <- getFiles(directory, complete_cases$id)
data[complete.cases(data), ] %>%
group_by(filename) %>%
summarize('corr' = cor(x = sulfate, y = nitrate))
}
cr <- corr("specdata")
cr <- sort(cr)
RNGversion("3.5.1")
set.seed(868)
out <- round(cr[sample(length(cr), 5)], 4)
print(out)
out <- round(cr[sample(length(cr), 5)], 4)
cr <- corr("specdata", 129)
cr <- sort(cr)
n <- length(cr)
RNGversion("3.5.1")
set.seed(197)
out <- c(n, round(cr[sample(n, 5)], 4))
print(out)
cr <- corr("specdata", 2000)
